# Generated by Django 3.2.9 on 2021-11-24 05:38

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='', max_length=255, verbose_name='nombre')),
                ('estado', models.CharField(default='', max_length=255, verbose_name='estado')),
            ],
            options={
                'db_table': 'cargo',
            },
        ),
        migrations.CreateModel(
            name='Persona',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres', models.CharField(default='', max_length=255, verbose_name='nombres')),
                ('apellidos', models.CharField(default='', max_length=255, verbose_name='apellidos')),
                ('cedula', models.CharField(default='', max_length=10, verbose_name='cedula')),
                ('celular', models.CharField(default='', max_length=255, verbose_name='celular')),
                ('fecha_nacimiento', models.DateTimeField(null=True, verbose_name='fecha_nacimiento')),
                ('direccion', models.CharField(default='', max_length=255, verbose_name='direccion')),
                ('estado', models.CharField(default='', max_length=255, verbose_name='estado')),
                ('fecha_creacion', models.DateTimeField(null=True, verbose_name='fecha_creacion')),
                ('fecha_modificacion', models.DateTimeField(null=True, verbose_name='fecha_modificacion')),
                ('userid', models.IntegerField(null=True, verbose_name='userid')),
                ('profesion', models.CharField(default='', max_length=255, verbose_name='profesion')),
                ('cargo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seguridad.cargo', verbose_name='cargo')),
            ],
            options={
                'db_table': 'persona',
            },
        ),
        migrations.CreateModel(
            name='Rol',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(default='', max_length=255, verbose_name='nombre')),
                ('estado', models.CharField(default='', max_length=255, verbose_name='estado')),
            ],
            options={
                'db_table': 'rol',
            },
        ),
        migrations.CreateModel(
            name='Tarjeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombres_propietario', models.CharField(default='', max_length=255, verbose_name='nombres_propietario')),
                ('apellidos_propietario', models.CharField(default='', max_length=255, verbose_name='apellidos_propietario')),
                ('fecha_vencimiento', models.DateTimeField(null=True, verbose_name='fecha_vencimiento')),
                ('personaid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seguridad.persona', verbose_name='personaid')),
            ],
            options={
                'db_table': 'tarjeta',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cedula', models.CharField(default='', max_length=10, verbose_name='cedula')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('persona', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seguridad.persona', verbose_name='personaid')),
                ('rol', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='seguridad.rol', verbose_name='rol')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'usuario',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
